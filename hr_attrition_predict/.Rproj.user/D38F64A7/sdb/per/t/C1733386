{
    "collab_server" : "",
    "contents" : "# IBM HR Data Analysis- Employee Attrition\n\n# Introduction: To predict if an employee is going to resign or not\n# Objective:- More and more, we have to envestigate that, how the company objective factors influence in attrition of employees, and what kind of working enviroment most will cause employees attrition.\n\n# Objective\n# The company wants to understand what factors contributed most to employee Attrition and to create a model that \n# can predict if a certain employee will leave the company or not. The goal is to create or improve different \n# retention strategies on targeted employees. Overall, the implementation of this model will allow management to\n# create better decision-making actions.\n# Load the data\nsetwd(\"data\")\nHR_emp_att<-read.csv(\"pfm_train.csv\",header = T,sep = \",\",na.strings = c(\"\",NA))\n\n# Required library\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(highcharter)\nlibrary(caret)\nlibrary(VIM)\nlibrary(plyr)\nlibrary(dplyr)\n\nlibrary(caTools)\nlibrary(gridExtra)\nlibrary(DT)\nlibrary(randomForest)\nlibrary(Metrics)\nlibrary(pROC)\nlibrary(e1071)\nlibrary(dtree)\nlibrary(corrplot)\nlibrary(DMwR)\nlibrary(xgboost)\nlibrary(Hmisc)\n\n# View the data\ndim(HR_emp_att)\nstr(HR_emp_att)\n\n## to check uniqueness of each variable\nsapply(HR_emp_att, function(x) length(unique(x)))\n# to check the class of each variable\nt(sapply(HR_emp_att, class))\n# to check summary of the Data\nsummary(HR_emp_att)\ndescribe(HR_emp_att)\n\n# As we see in the Data:\n\n# Observations: 1,100 with Variables: 31\n\n# Class Label is Attrition with 922 'NO' and 178 'Yes' that shows the unbalance class label. we have to pay attention to the unbalance class algorithm problems!\n\n# Over 18 is equal to 'Y', which means employee is not less than 18 years old. this attribute should be considered for the future, maybe by changing the ruls of emploement, young people under 18 can also working in companies. Here, according to the data set, we will remove it.\n\n# Moreover, Standard Hours is equal 80 for all observation. the decision for this attribute is same to Over18 and Employee Count.\n\n# BusinessTravel, Department, EducationField, Gender, jobRole, MaritalStatus and OverTime are categorical data and other variabels are continues.\n\n# Some of variables are related to the years of working wich can be a good candidate for feature generation.\n\n# Some of variable are related to personal issues like WorkLifeBalance, RelationshipSatisfaction, JobSatisfaction,EnvironmentSatisfaction etc.\n\n# There are some variables that are related to the income like MonthlyIncome, PercentSalaryHike, etc.\n\n# EmployeeNumber is a variable for identifying the specific employee.If we have more information about employee and the structure of the employee number, then we can extract some new features. But now it is not possible and we have to remove it from our data set.\n\n# Checking distribution of Attrition\nHR_emp_att %>% group_by(Attrition) %>% summarise(cnt=n())\n\n# Checking for missing values.\nsapply(HR_emp_att, function(x) sum(is.na(x)))\n# checking the variable importance\nVIM::aggr(HR_emp_att)\n# No Missing Value,we shall Remove non value attributes because These variables can not play significant role because they are same for all records.\n# also, EmployeeNumber can be accepted as an indicator for the time of join to the company which can be used for new feature generation,But we do not have any meta data about it, then, we will remove it.\n\n# Removing non value attributes\nHR_emp_att$EmployeeNumber<- NULL\nHR_emp_att$StandardHours <- NULL\nHR_emp_att$Over18 <- NULL\nHR_emp_att$EmployeeCount <- NULL\ncat(\"Data Set has \",dim(HR_emp_att)[1], \" Rows and \", dim(HR_emp_att)[2], \" Columns\" )\n\n# There are some attributes that are categorical, but in the data set are integer. We have to change them to categorical.\nHR_emp_att$Education <- factor(HR_emp_att$Education)\nHR_emp_att$EnvironmentSatisfaction <- factor(HR_emp_att$EnvironmentSatisfaction)\nHR_emp_att$JobInvolvement <- factor(HR_emp_att$JobInvolvement)\nHR_emp_att$JobLevel <- factor(HR_emp_att$JobLevel)\nHR_emp_att$JobSatisfaction <- factor(HR_emp_att$JobSatisfaction)\nHR_emp_att$PerformanceRating <- factor(HR_emp_att$PerformanceRating)\nHR_emp_att$RelationshipSatisfaction <- factor(HR_emp_att$RelationshipSatisfaction)\nHR_emp_att$StockOptionLevel <- factor(HR_emp_att$StockOptionLevel)\nHR_emp_att$WorkLifeBalance <- factor(HR_emp_att$WorkLifeBalance)\nHR_emp_att$Attrition <- factor(HR_emp_att$Attrition)\n\n## Exploratory Data Analysis\n\ng1 <- ggplot(HR_emp_att, aes(x = MonthlyIncome, fill = Attrition)) + geom_density(alpha = 0.7) + scale_fill_manual(values = c(\"#386cb0\",\"#fdb462\")) \n\n### Attrition - log(Monthly Income)\ng2<-ggplot(HR_emp_att, aes(x =  log(MonthlyIncome), fill = Attrition,colour = Attrition)) + geom_density( alpha = .3) + ggtitle(\"\") \n\ngrid.arrange(g1, g2, ncol = 1, nrow = 2)\n\n# We can only make few observations. It seems fair to say that a large majority of\n# those who left had a relatively lower monthly income and daily rate while the never\n# made it in majority into the higher hourly rate group. On the other hand, the\n# differences become elusive when comparing the monthly rate.\n\n### YearsAtCompany - Attrition \nggplot(HR_emp_att, aes(x = YearsAtCompany, fill = Attrition, colour = Attrition)) + geom_density( alpha = .3)\n\n### Count - EducationField\nattrition_edufield <- HR_emp_att %>%select(Attrition, EducationField) %>%group_by(Attrition, EducationField) %>% summarise(count = n()) + facet_wrap(~Attrition)\n# creating datatable\ndatatable(attrition_edufield)\n\nggplot(attrition_edufield, aes(x = EducationField,y = count,fill = EducationField, colour = EducationField))+ geom_bar(stat = \"identity\")  + facet_wrap(~Attrition)\n\nggplot(HR_emp_att, aes(x = Age, fill = EducationField,colour = EducationField, alpha = .3)) + geom_density()\n\nggplot(HR_emp_att, aes(x =  Age, fill = BusinessTravel,colour = BusinessTravel, alpha = .3)) + geom_density()\n\n### Distribution of Age/Overtime \nggplot(HR_emp_att, aes(x =  Age, fill = OverTime, colour = OverTime, alpha = .3)) +geom_density()\n\n### Distribution of Age\nggplot(data=HR_emp_att, aes(HR_emp_att$Age)) + geom_histogram(breaks=seq(20, 50, by=2),\n                                                              col=\"red\",aes(fill=..count..))+ labs(x=\"Age\", y=\"Count\")+ scale_fill_gradient(\"Count\", low=\"black\", high=\"red\")  \n# As we saw above, the majority of employees are between 28-36 years.\n\n# Exploring BusinessTravel variable\na1 <- HR_emp_att %>%group_by(BusinessTravel) %>% tally() %>%ggplot(aes(x = BusinessTravel, y = n,fill=BusinessTravel)) +\n  geom_bar(stat = \"identity\") +theme_minimal()+ labs(x=\"Business Travel\", y=\"Number Attriation\")+\n  ggtitle(\"Attrition according to the Business Travel\")+geom_text(aes(label = n), vjust = -0.5, position = position_dodge(0.9))\n\na2<- HR_emp_att %>% group_by(BusinessTravel, Attrition) %>%tally() %>%ggplot(aes(x = BusinessTravel, y = n,fill=Attrition)) +\n  geom_bar(stat = \"identity\") + theme_minimal()+ labs(x=\"Business Travel\", y=\"Number Attriation\")+\n  ggtitle(\"Attrition according to the Business Travel\")+geom_text(aes(label = n), vjust = -0.5, position = position_dodge(0.8))\n\ngrid.arrange(a1,a2) \n\n# # Here is the distribution of the data according to the Business Tralvel situation.\n# more than 70% of employees travel rarely and 10 % of them has no travel and 20% of them\n# are travel frequently\n\nHR_emp_att %>%ggplot(aes(x = BusinessTravel, group = Attrition)) +geom_bar(aes(y = ..prop.., fill = factor(..x..)),\n                                                                           stat=\"count\",alpha = 0.7) +geom_text(aes(label = scales::percent(..prop..), y = ..prop.. ),   \n                                                                                                                stat= \"count\",vjust = 2) +labs(y = \"Percentage\", fill= \"business Travel\") + facet_grid(~Attrition) +   \n  theme_minimal()+theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5)) + ggtitle(\"Attrition\")           \n# As it is obvious from the above plot that majority of employee those who Travel_Rarely had left\n# Furthermore, there seems to be a clear indication that those who left travelled more frequently compared to\n# others. This might have also been an important reason behind their resignation. Here I presume that travelling\n# means staying somewhere else overnight, or for a longer period of time, which is why we may connect this to \n# work-life balance issues\n\n# Exploring variable Department\ng1 <- HR_emp_att %>%group_by(Department) %>%tally() %>%ggplot(aes(x = Department, y = n,fill=Department)) +\n  geom_bar(stat = \"identity\") + theme_minimal()+geom_text(aes(label = n), vjust = -0.1, position = position_dodge(0.9)) \n\ng2 <- HR_emp_att %>%group_by(Department, Attrition) %>%tally() %>%ggplot(aes(x = Department, y = n,fill=Attrition)) +\n  geom_bar(stat = \"identity\") +theme_minimal()+geom_text(aes(label = n), vjust = -0.1, position = position_dodge(0.9))  \n\ngrid.arrange(g1,g2) \n\n\n# Exploring the Variable Education\ng1<- HR_emp_att %>%group_by(Education, Attrition) %>%tally() %>%ggplot(aes(x = Education, y = n,fill=Attrition)) +\n  geom_bar(stat = \"identity\") + theme_minimal()+geom_text(aes(label = n), vjust = -0.5, position = position_dodge(0.9))+\n  labs(x=\"Education\", y=\"Number Attriation\")+ggtitle(\"Attrition in regards to Education Level\")\n\ng2<- HR_emp_att %>%ggplot(aes(x = Education, group = Attrition)) +geom_bar(aes(y = ..prop.., fill = factor(..x..)),\n                                                                           stat=\"count\",alpha = 0.7) + geom_text(aes(label = scales::percent(..prop..), y = ..prop.. ),  \n                                                                                                                 stat= \"count\",vjust = 2) +labs(y = \"Percentage\", fill= \"Education\") + facet_grid(~Attrition) +  \n  theme_minimal()+ theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5)) + ggtitle(\"Attrition\")           \n\ngrid.arrange(g1,g2)  \n\n\n# Exploring the Variable Gender\nHR_emp_att %>%ggplot(aes(x = Gender, group = Attrition)) +geom_bar(aes(y = ..prop.., fill = factor(..x..)), \n                                                                   stat=\"count\",alpha = 0.7) + geom_text(aes(label = scales::percent(..prop..), y = ..prop.. ),   \n                                                                                                         stat= \"count\",vjust = -.5) +labs(y = \"Percentage\", fill= \"Gender\") + facet_grid(~Attrition) + \n  theme_minimal()+theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5)) + ggtitle(\"Attrition\")            \n\n\n# Exploring the variable MaritalStatus           \nHR_emp_att %>%ggplot(aes(x = MaritalStatus, group = Attrition)) +geom_bar(aes(y = ..prop.., fill = factor(..x..)),\n                                                                          stat=\"count\",alpha = 0.7) +geom_text(aes(label = scales::percent(..prop..), y = ..prop.. ),  \n                                                                                                               stat= \"count\",vjust = -.5) +labs(y = \"Percentage\", fill= \"MaritalStatus\") + facet_grid(~Attrition) +  \n  theme_minimal()+ theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5)) +ggtitle(\"Attrition\")           \n\n# exploring the Variable MonthlyIncome  \n# emp with low monthly salary trend to quit\nHR_emp_att %>%ggplot(mapping = aes(x = MonthlyIncome)) + geom_histogram(aes(fill = Attrition), bins=20)+\n  labs(x=\"Monthlt Income\", y=\"Number Attriation\")+ ggtitle(\"Attrition in regards to Monthly Income\")    \n\nHR_emp_att %>% filter(Attrition==1) %>%ggplot(mapping = aes(x = MonthlyIncome)) + geom_histogram(aes(fill = Attrition), bins=20)+\n  labs(x=\"Monthlt Income\", y=\"Number Attriation\")+ ggtitle(\"Attrition in regards to Monthly Income\")    \n\n# Exploring the Variable OverTime\n\nggplot(HR_emp_att, aes(y = YearsSinceLastPromotion, x = YearsAtCompany, colour = OverTime)) + geom_jitter(size = 1, alpha = 0.7) + \n  geom_smooth(method = \"gam\") + facet_wrap(~ Attrition) + ggtitle(\"Attrition\") + scale_colour_manual(values = c(\"#386cb0\",\"#fdb462\")) + \n  theme(plot.title = element_text(hjust = 0.5))\n\ng1 <-HR_emp_att %>%ggplot(aes(x = OverTime, group = Attrition)) + geom_bar(aes(y = ..prop.., fill = factor(..x..)),\n                                                                           stat=\"count\",alpha = 0.7) + geom_text(aes(label = scales::percent(..prop..), y = ..prop.. ), \n                                                                                                                 stat= \"count\",vjust = 0.3) +labs(y = \"Percentage\", fill= \"OverTime\") +facet_grid(~Attrition) +    \n  theme_minimal()+ theme(legend.position = \"none\", plot.title = element_text(hjust = 0.3)) +           \n  ggtitle(\"Attrition\")         \n\ng2 <-HR_emp_att %>% group_by(OverTime, Attrition) %>% tally() %>% ggplot(aes(x = OverTime, y = n,fill=Attrition)) +         \n  geom_bar(stat = \"identity\") + theme_minimal()+ geom_text(aes(label = n), vjust = -0.3, position = position_dodge(0.9))+\n  labs(x=\"Over time\", y=\"Number Attriation\")+ggtitle(\"Attrition in regards to Over time\")\n\ngrid.arrange(g1,g2)\n\n# First graph shows Years at company in relation to Years since last promotion, grouped by both attrition and \n# overtime. This is an interesting issue, since a high correlation between these two variables \n# (longer you are in the company, less chance you have to be promoted, so to speak) may mean that people are not\n# really growing within the company. However, since this is a simulated dataset we cannot compare it with some \n# norms outside it, so we can compare certain groups within our set, e.g. those who are working overtime and \n# those who are not.\n# \n# Here we can note two things. Firstly, there is a relatively higher percentage of people working overtime in the\n# group of those who left, an observation confirmed by our barchart. Secondly, while things seem to be going in \n# the right direction for the group of people who still work for the IBM (higher correlation between years since\n# last promotion and years at company for those who don't work overtime), the opposite is happening in the other\n# group. It seems that there may be a pattern of people leaving because they are not promoted although they work\n# hard. This is only an assumption at this point, since the confidence intervals (gray area around the lines) are\n# getting wider, meaning there is not that much certainty about this, especially at higher values of X and Y \n# (due to the lack of data).\n\n\n# Exploring the Variable WorklifeBalance\ng1<-HR_emp_att%>%ggplot(aes(x = WorkLifeBalance, group = Attrition)) + geom_bar(aes(y = ..prop.., fill = factor(..x..)), \n                                                                                stat=\"count\", alpha = 0.7) +geom_text(aes(label = scales::percent(..prop..), y = ..prop.. ), \n                                                                                                                      stat= \"count\", vjust = -.5) +labs(y = \"Percentage\", fill= \"WorkLifeBalance\") +\n  facet_grid(~Attrition) + theme_minimal()+ theme(legend.position = \"none\", plot.title = element_text(hjust = 0.5)) + \n  ggtitle(\"Attrition\")\n\ng2<- HR_emp_att %>% group_by(WorkLifeBalance, Attrition) %>% tally() %>% ggplot(aes(x = WorkLifeBalance, y = n,fill=Attrition)) +\n  geom_bar(stat = \"identity\") + theme_minimal()+geom_text(aes(label = n), vjust = -0.5, position = position_dodge(0.9))+\n  labs(x=\"  Work Life Balance\", y=\"Number Attriation\") + ggtitle(\"Attrition in regards to  Work Life Balance\")\n\ngrid.arrange(g1,g2)\n\n# Exploring the Variables WorkLifeBalance and DistanceFromHome\nggplot(HR_emp_att,aes(x= WorkLifeBalance, y=DistanceFromHome, group = WorkLifeBalance, fill = WorkLifeBalance)) + \n  geom_boxplot(alpha=0.7) + theme(legend.position=\"none\") + facet_wrap(~ Attrition) + ggtitle(\"Attrition\") + \n  theme(plot.title = element_text(hjust = 0.5))\n#We can see that there are some patterns in the work-life balance if we compare the two groups within the Attrition variable.\n\n# Those who rated their work-life balance relatively low were commuting from a bit farther away in comparison\n# with those who rated their work-life balance as very good. This difference is more pronounced in the group of \n# those who are not in the company anymore, suggesting a possibly influential attrition factor. If the distance \n# is measured in kilometers or miles, this of course doesn't represent a long distance, but since we're dealing\n# with a simulated dataset, it might play a role in predicting our attrition class.  \n# visualization of Attrition\n\nHR_emp_att %>% group_by(Attrition) %>% tally() %>%ggplot(aes(x = Attrition, y = n,fill=Attrition)) +\n  geom_bar(stat = \"identity\") + theme_minimal()+ labs(x=\"Attrition\", y=\"Count of Attriation\")+\n  ggtitle(\"Attrition\")+ geom_text(aes(label = n), vjust = -0.5, position = position_dodge(0.9))\n\n# As it is obvious from the above graph, there is a great imbalance between the two classes and we are encountered an unbalanced\n# classification problem. In order to handle this issue we utilize the SMOTE method which can generate a new smoothed data set\n# that addresses the class unbalance problem.we will balance the data later now we will build model on row data.\n# \n\n\n\n\n# data preparation\n\nrfData <- HR_emp_att\nset.seed(123)\nindexes = sample(1:nrow(rfData), size=0.8*nrow(rfData))\nRFRaw.train.Data <- rfData[indexes,]\nRFRaw.test.Data <- rfData[-indexes,]\n\n# validate dataset\nRFRaw.validate.Data <- read.csv('pfm_test')\n\n# Removing non value attributes\nRFRaw.validate.Data$EmployeeNumber<- NULL\nRFRaw.validate.Data$StandardHours <- NULL\nRFRaw.validate.Data$Over18 <- NULL\nRFRaw.validate.Data$EmployeeCount <- NULL\ncat(\"Data Set has \",dim(HR_emp_att)[1], \" Rows and \", dim(HR_emp_att)[2], \" Columns\" )\n\n# There are some attributes that are categorical, but in the data set are integer. We have to change them to categorical.\nRFRaw.validate.Data$Education <- factor(RFRaw.validate.Data$Education)\nRFRaw.validate.Data$EnvironmentSatisfaction <- factor(RFRaw.validate.Data$EnvironmentSatisfaction)\nRFRaw.validate.Data$JobInvolvement <- factor(RFRaw.validate.Data$JobInvolvement)\nRFRaw.validate.Data$JobLevel <- factor(RFRaw.validate.Data$JobLevel)\nRFRaw.validate.Data$JobSatisfaction <- factor(RFRaw.validate.Data$JobSatisfaction)\nRFRaw.validate.Data$PerformanceRating <- factor(RFRaw.validate.Data$PerformanceRating)\nRFRaw.validate.Data$RelationshipSatisfaction <- factor(RFRaw.validate.Data$RelationshipSatisfaction)\nRFRaw.validate.Data$StockOptionLevel <- factor(RFRaw.validate.Data$StockOptionLevel)\nRFRaw.validate.Data$WorkLifeBalance <- factor(RFRaw.validate.Data$WorkLifeBalance)\n\n# Building the model\n\nRaw.rf.model <- randomForest(Attrition~.,RFRaw.train.Data, importance=TRUE,ntree=1000)\n\n# plotting variable importance \nvarImpPlot(Raw.rf.model)  \n\n# As we see here, Over time, Age, MonthlyIncome, Jobrole and TotalWorkingYears are top five variables.            \n\nRaw.rf.prd <- predict(Raw.rf.model, newdata = RFRaw.test.Data)\nRaw.rf.prd <- sapply(Raw.rf.prd, function(x) ifelse(x>0.4,1,0))\nconfusionMatrix(RFRaw.test.Data$Attrition, Raw.rf.prd)  \n\nRaw.rf.plot<- plot.roc(as.numeric(RFRaw.test.Data$Attrition), as.numeric(Raw.rf.prd),lwd=2, type=\"b\",print.auc=TRUE,col =\"blue\")   \n\n# Acc = 0.983 which is very good result, We see that the AUC is 0.938  \n\n# Feature Engineering\n\n# Now we want to use some data wrapping to make the results better:\n#   \n# Making Age Group 18-24 = Young , 25-54=Middle-Age , 54-120= Adult\n\nHR_emp_att$AgeGroup <- as.factor(ifelse(HR_emp_att$Age<=28,\"Young\", ifelse(HR_emp_att$Age<=38,\"Middle-Age\",\"Adult\")))\ntable(HR_emp_att$AgeGroup) \n\n# as we see the majority of employee are Young\n\n# 2- Creating a new variable Tot.Satisfaction i.e. the total of the satisfaction from Job, Environment,\n# JobInvolvement,JobSatisfaction,RelationshipSatisfaction,TotlaSatisfaction etc.\nHR_emp_att$Tot.Satisfaction <- \n  as.numeric(HR_emp_att$EnvironmentSatisfaction)+\n  as.numeric(HR_emp_att$JobInvolvement)+\n  as.numeric(HR_emp_att$JobSatisfaction)+\n  as.numeric(HR_emp_att$RelationshipSatisfaction)+\n  as.numeric(HR_emp_att$WorkLifeBalance)\n\nsummary(HR_emp_att$Tot.Satisfaction)\n# \nggplot(HR_emp_att, aes(x = Tot.Satisfaction, fill = AgeGroup, colour = Attrition)) + geom_density() +\n                                                              labs(x=\"Tot.Satisfaction\", y=\"%\")\n\n# 3- Study Years for getting Education Level certificate           \ntable(HR_emp_att$Education)\n# As we see here, there are five Education level\n# From high School to PhD (HighSchool=10 years, College=2 years, Bachelor=4 years,Master=2 years,PhD= four years)\n\nHR_emp_att$YearsEducation <-  ifelse(HR_emp_att$Education==1,10,ifelse(HR_emp_att$Education==2,12,\n                                                                       ifelse(HR_emp_att$Education==3,16,ifelse(HR_emp_att$Education==4,18,22))))  \n\ntable(HR_emp_att$YearsEducation)\n# we used culumative years for any level \n# the majority of employee are 16 years education (Bachelor)\n\nHR_emp_att$IncomeLevel <- as.factor(ifelse(HR_emp_att$MonthlyIncome<mean(HR_emp_att$MonthlyIncome),\"Low\",\"High\"))\ntable(HR_emp_att$IncomeLevel)\n\n# Let see the Correlation Matrix of Data\ncorrplot(cor(sapply(HR_emp_att,as.integer)),method = \"pie\") \n\n# keep iid, remove high correlate features\nHR_emp_att$Education <- NULL\nHR_emp_att$Age <- NULL\nHR_emp_att$JobLevel<- NULL\nHR_emp_att$MonthlyIncome<- NULL\n\n# We can see some of variables are high correlated\n# As an Example :\n# JobLevel and MonthlyIncome\n# Education and YearsEducation\n# \n# they cause multicollinearity problem in our data set,so we have to deciede to remove one of them for any group Now we try again our data set with new attributes using Random Forest   \n\n# New Random Forest \n# data preparation\nrfData <- HR_emp_att\nset.seed(123)\nindexes = sample(1:nrow(rfData), size=0.8*nrow(rfData))\nRFtrain.Data <- rfData[indexes,]\nRFtest.Data <- rfData[-indexes,]\n\nrf.model <- randomForest(Attrition~.,RFtrain.Data, importance=TRUE,ntree=500)\nvarImpPlot(rf.model)\n# Here we see: OverTime, TotalSatisfaction (New Feature), MonthlyIncome, Age and TotalWorkingYears are top five\n# variables.\n\nrf.prd <- predict(rf.model, newdata = RFtest.Data)\nrf.prd <- sapply(rf.prd,function(x) ifelse(x>0.4,1,0))\nconfusionMatrix(RFtest.Data$Attrition, rf.prd)\nrf.Plot<- plot.roc (as.numeric(RFtest.Data$Attrition), as.numeric(rf.prd),lwd=2, type=\"b\", print.auc=TRUE,col =\"blue\")\n\nimport xgboost as xgb\nimport numpy as np\nfrom sklearn.tree import DecisionTreeClassifier\n\nimport xgboost as xgb\nimport numpy as np\nfrom sklearn.tree import DecisionTreeClassifier\n\n# It is better than previous  algorithm with raw data.\n\n# TotalSatisfaction is high important attribute\n\n# Let using other algorithms\n\n## Using Support Vector Machine\nsvmData <- HR_emp_att\nset.seed(123)\nindexes = sample(1:nrow(svmData), size=0.8*nrow(svmData))\nSVMtrain.Data <- svmData[indexes,]\nSVMtest.Data <- svmData[-indexes,]\ntuned <- tune(svm,factor(Attrition)~.,data = SVMtrain.Data)\nsvm.model <- svm(SVMtrain.Data$Attrition~., data=SVMtrain.Data\n                 ,type=\"C-classification\", gamma=tuned$best.model$gamma\n                 ,cost=tuned$best.model$cost\n                 ,kernel=\"radial\")\nsvm.prd <- predict(svm.model,newdata=SVMtest.Data)\nconfusionMatrix(svm.prd,SVMtest.Data$Attrition) \n\nsvm.plot <-plot.roc (as.numeric(SVMtest.Data$Attrition), as.numeric(svm.prd),lwd=2, type=\"b\", print.auc=TRUE,col =\"blue\")                 \n\n# as we see, in compare to RF, Accuracy is lower to 0.9167 and AUC to 0.698 which is not better than RF.\n\n# There is no False Negative! and a lot of False Positive!  \n\n\n# Decision Tree\n# Here Dtree will be investigated and compared to other approaches. DTree selected because it is a very\n# good algorithm for interpretion for non-technical.\n\nDtData <- HR_emp_att\nset.seed(123)\nindexes = sample(1:nrow(DtData), size=0.8*nrow(DtData))\nDTtrain.Data <- DtData[indexes,]\nDTtest.Data <- DtData[-indexes,]\n\ndtree.model <- tree::tree (Attrition ~., data = DTtrain.Data)\nplot(dtree.model)\ntext(dtree.model, all = T)\ndtree.prd <- predict(dtree.model, DTtest.Data, type = \"class\")\nconfusionMatrix(dtree.prd,DTtest.Data$Attrition)\ndtree.plot <- plot.roc (as.numeric(DTtest.Data$Attrition), as.numeric(dtree.prd),lwd=2, type=\"b\", print.auc=TRUE, col =\"blue\")\n\n# Not very nice result! Accuracy is 0.8724  where AUC is 0.630 which is not better than SVM \n\n\n# Exterme Gradient Boost\n\nset.seed(123)\nxgbData <- HR_emp_att\nindexes <- sample(1:nrow(xgbData), size=0.8*nrow(xgbData))\nXGBtrain.Data <- xgbData[indexes,]\nXGBtest.Data <- xgbData[-indexes,]\n\nformula = Attrition~.\nfitControl <- trainControl(method=\"cv\", number = 3,classProbs = TRUE )\nxgbGrid <- expand.grid(nrounds = 50,\n                       max_depth = 12,\n                       eta = .03,\n                       gamma = 0.01,\n                       colsample_bytree = .7,\n                       min_child_weight = 1,\n                       subsample = 0.9\n)  \n\nXGB.model <- train(formula, data = XGBtrain.Data,\n                   method = \"xgbTree\"\n                   ,trControl = fitControl\n                   , verbose=0\n                   , maximize=FALSE\n                   ,tuneGrid = xgbGrid\n)\n\nimportance <- varImp(XGB.model)\nvarImportance <- data.frame(Variables = row.names(importance[[1]]), \n                            Importance = round(importance[[1]]$Overall,2))\n# Create a rank variable based on importance of variables\nrankImportance <- varImportance %>%\n  mutate(Rank = paste0('#',dense_rank(desc(Importance))))\nggplot(rankImportance, aes(x = reorder(Variables, Importance), \n                           y = Importance)) +\n  geom_bar(stat='identity',colour=\"white\", fill = \"lightgreen\") +\n  geom_text(aes(x = Variables, y = 1, label = Rank),\n            hjust=0, vjust=.5, size = 4, colour = 'black',\n            fontface = 'bold') +\n  labs(x = 'Variables', title = 'Relative Variable Importance') +\n  coord_flip() + \n  theme_bw()\n# As we see above: MonthlyIncome, DailyRate, OvertimeYes, TotalSatisfaction and Age are top five attributes.\nXGB.prd <- predict(XGB.model,XGBtest.Data)\nXGB.prd <- sapply(XGB.prd , function(x) ifelse(x>.4,1,0))\nconfusionMatrix(XGB.prd, XGBtest.Data$Attrition)\nXGB.plot <- plot.roc (as.numeric(XGBtest.Data$Attrition), as.numeric(XGB.prd),lwd=2, type=\"b\", print.auc=TRUE,col =\"blue\")\n# As we see the ACC is 0.9524 which is very good result.\n# Perfect: very good result is in Balanced Accuracy which is 0.8375 better than Svm and Decision tree\n\n\n\n\n# Solving Unbalanced Problem\n# As we mentioned before there is unbalanced problem in class label. There are some approaches to solve the\n# problem. here we use SMOT method.\n\nClasscount = table(HR_emp_att$Attrition)\nClasscount\n# Over Sampling\nover = ( (0.6 * max(Classcount)) - min(Classcount) ) / min(Classcount)\n# Under Sampling\nunder = (0.4 * max(Classcount)) / (min(Classcount) * over)\nover = round(over, 1) * 100\nunder = round(under, 1) * 100\n#Generate the balanced data set\n\nBalancedData = SMOTE(Attrition~., HR_emp_att, perc.over = \n                       over, k = 5, perc.under = under)\n# let check the output of the Balancing\nBalancedData %>%\n  group_by(Attrition) %>%\n  tally() %>%\n  ggplot(aes(x = Attrition, y = n,fill=Attrition)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal()+\n  labs(x=\"Attrition\", y=\"Count of Attriation\")+\n  ggtitle(\"Attrition\")+\n  geom_text(aes(label = n), vjust = -0.5, position = position_dodge(0.9))\n\n# Now we try to run again Random Forest with the Balanced Data\nset.seed(123)\nRF_Bal_Data <- BalancedData\nindexes = sample(1:nrow(RF_Bal_Data), size=0.8*nrow(RF_Bal_Data))\nRF_BLtrain.Data <- RF_Bal_Data[indexes,]\nRF_BLtest.Data <- RF_Bal_Data[-indexes,]\n\nRF_BAL.model <- randomForest(Attrition~.,RF_BLtrain.Data, importance=TRUE,ntree=500)\nvarImpPlot(RF_BAL.model)\nRF_BAL.prd <- predict(RF_BAL.model, newdata = RF_BLtest.Data)\nconfusionMatrix(RF_BLtest.Data$Attrition, RF_BAL.prd)\nRF_BAL.Plot<- plot.roc (as.numeric(RF_BLtest.Data$Attrition), as.numeric(RF_BAL.prd),lwd=2, type=\"b\", print.auc=TRUE,col =\"blue\")\n\n\n\n\n# Now we try to run again XGBoost with the Balanced Data\nset.seed(123)\nxgbData <- BalancedData\nindexes = sample(1:nrow(xgbData), size=0.8*nrow(xgbData))\nBLtrain.Data <- xgbData[indexes,]\nBLtest.Data <- xgbData[-indexes,]\n\nformula = Attrition~.\nfitControl <- trainControl(method=\"cv\", number = 3,classProbs = TRUE )\nxgbGrid <- expand.grid(nrounds = 500,\n                       max_depth = 20,\n                       eta = .03,\n                       gamma = 0.01,\n                       colsample_bytree = .7,\n                       min_child_weight = 1,\n                       subsample = 0.9\n)\n\n\n\nimportance <- varImp(XGB.model)\nvarImportance <- data.frame(Variables = row.names(importance[[1]]), \n                            Importance = round(importance[[1]]$Overall,2))\n# Create a rank variable based on importance\nrankImportance <- varImportance %>%\n  mutate(Rank = paste0('#',dense_rank(desc(Importance))))\nggplot(rankImportance, aes(x = reorder(Variables, Importance), \n                           y = Importance)) +\n  geom_bar(stat='identity',colour=\"white\", fill = \"lightgreen\") +\n  geom_text(aes(x = Variables, y = 1, label = Rank),\n            hjust=0, vjust=.5, size = 4, colour = 'black',\n            fontface = 'bold') +\n  labs(x = 'Variables', title = 'Relative Variable Importance') +\n  coord_flip() + \n  theme_bw()\n\nNewXGB.prd <- predict(XGB.model,BLtest.Data)\nNewXGB.prd <- sapply(NewXGB.prd , function(x) ifelse(x>.5,1,0))\nconfusionMatrix(NewXGB.prd, BLtest.Data$Attrition)\n\nXGB.plot <- plot.roc (as.numeric(BLtest.Data$Attrition), as.numeric(NewXGB.prd),lwd=2, type=\"b\", print.auc=TRUE, col =\"blue\")\nXGB.plot\n\n# Congratulation !\n#   Excelent Results:\n#   Accuracy : more than 90% !!!!!\n#   AUC about 0.89\n\n# Here we plot all the approaches in one plot:\n\npar(mfrow=c(3,3))\nplot.roc (as.numeric(RFRaw.test.Data$Attrition), as.numeric(Raw.rf.prd), main=\"Raw Data Random Forest\",lwd=2, type=\"b\", print.auc=TRUE, col =\"seagreen4\")\nplot.roc (as.numeric(RFtest.Data$Attrition), as.numeric(rf.prd), main=\" NEW Data Random Forest\",lwd=2, type=\"b\", print.auc=TRUE, col =\"seagreen\")\nRF_BAL.Plot<- plot.roc (as.numeric(RF_BLtest.Data$Attrition), as.numeric(RF_BAL.prd),main=\"Balanced Data Random Forest\",lwd=2, type=\"b\", print.auc=TRUE,col =\"blue\")\nplot.roc (as.numeric(DTtest.Data$Attrition), as.numeric(dtree.prd), main=\"DTree\",lwd=2, type=\"b\", print.auc=TRUE, col =\"brown\")\nplot.roc (as.numeric(SVMtest.Data$Attrition), as.numeric(svm.prd),main=\"SVM\",lwd=2, type=\"b\", print.auc=TRUE, col =\"red\")\nplot.roc (as.numeric(XGBtest.Data$Attrition), as.numeric(XGB.prd),main=\"XGBoost\",lwd=2, type=\"b\", print.auc=TRUE, col =\"blue\")\nplot.roc (as.numeric(BLtest.Data$Attrition), as.numeric(NewXGB.prd),main=\" Balanced Data XGBoost\",lwd=2, type=\"b\", print.auc=TRUE, col =\"green\")\n\n\n\n\n\n\n\n\n",
    "created" : 1512836598119.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3463531967",
    "id" : "C1733386",
    "lastKnownWriteTime" : 1512920262,
    "last_content_update" : 1512920262928,
    "path" : "D:/git/hr_resign_predict/HR_emp_attrition.R",
    "project_path" : "HR_emp_attrition.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}